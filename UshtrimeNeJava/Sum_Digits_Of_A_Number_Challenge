//Write a method with the name sumDigits that has one int parameter called number. 
//
//If parameter is >= 10 then the method should process the number and return sum of 
//all digits, otherwise return -1 to indicate an invalid value.
//
//The numbers from 0-9 have 1 digit so we dont want to process them, also we dont 
//want to process negative numbers, so also return -1 for negative numbers.
//
//For example calling the method sumDigits(125) should return 8 since 1 + 2 + 5 = 8.
//
//Calling the method sumDigits(1) should return -1 as per requirements described above.
//
//Add some code to the main method to test out the sumDigits method to determine that 
//it is working correctly for valid and invalid values passed as arguments.
//
//Hint: 
//	Use n % 10 to extract the least-significant digit.
//	Use n = n / 10 to discard the least-significant digit.

package digitSumChallenge;

public class DigitSumChallenge {

	public static int sumDigits(int number) {
		if (number >= 10) {
			int sum = 0;
			int counter = 0;
			int digit = 0;

			while(number != 0) {
				digit = number % 10;
				sum = sum + digit;
				number /= 10;
				counter++;
			}

			System.out.println("Counter: " + counter);
			return sum;
		} 
		return -1;
	}

	public static void main(String[] args) {
		System.out.println("Result " + sumDigits(455));	//should output 14

	}

}
